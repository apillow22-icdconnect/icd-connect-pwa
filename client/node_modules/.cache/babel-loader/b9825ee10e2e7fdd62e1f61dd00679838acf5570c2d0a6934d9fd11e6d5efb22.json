{"ast":null,"code":"import _objectSpread from\"/Users/rosavargas/ICD/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Typography,Card,CardContent,Grid,IconButton,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,Chip,Fab,Tooltip}from'@mui/material';import{ChevronLeft,ChevronRight,Today,Add,Edit,Delete,Work,School,Event,Warning,Star}from'@mui/icons-material';import{useAuth}from'../../contexts/AuthContext';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CalendarView=()=>{const{user}=useAuth();const[currentDate,setCurrentDate]=useState(new Date());const[events,setEvents]=useState([]);const[dialogOpen,setDialogOpen]=useState(false);const[editingEvent,setEditingEvent]=useState(null);const[selectedDate,setSelectedDate]=useState(null);const[eventForm,setEventForm]=useState({title:'',description:'',date:'',type:'work'});const isAdmin=(user===null||user===void 0?void 0:user.role)==='admin';useEffect(()=>{fetchEvents();},[]);const fetchEvents=async()=>{try{const[schedulesResponse,eventsResponse]=await Promise.all([axios.get('/api/schedules'),axios.get('/api/calendar/events')]);const schedules=schedulesResponse.data.map(schedule=>_objectSpread(_objectSpread({},schedule),{},{isSchedule:true,displayDate:schedule.weekOf}));const customEvents=eventsResponse.data.map(event=>_objectSpread(_objectSpread({},event),{},{isSchedule:false,displayDate:event.date}));setEvents([...schedules,...customEvents]);}catch(error){console.error('Error fetching events:',error);}};const getDaysInMonth=date=>{const year=date.getFullYear();const month=date.getMonth();const firstDay=new Date(year,month,1);const lastDay=new Date(year,month+1,0);const daysInMonth=lastDay.getDate();const startingDay=firstDay.getDay();return{daysInMonth,startingDay};};const navigateMonth=direction=>{const newDate=new Date(currentDate);newDate.setMonth(newDate.getMonth()+direction);setCurrentDate(newDate);};const goToToday=()=>{setCurrentDate(new Date());};const getEventsForDate=date=>{return events.filter(event=>{const eventDate=new Date(event.displayDate);return eventDate.toDateString()===date.toDateString();});};const handleDateClick=date=>{if(isAdmin){setSelectedDate(date);setEventForm({title:'',description:'',date:date.toISOString().split('T')[0],type:'work'});setEditingEvent(null);setDialogOpen(true);}};const handleEventClick=(event,e)=>{e.stopPropagation();if(isAdmin){setEditingEvent(event);setEventForm({title:event.title,description:event.description||'',date:event.displayDate.split('T')[0],type:event.type||'work'});setDialogOpen(true);}};const getEventColor=type=>{switch(type){case'work':return'primary';case'training':return'secondary';case'meeting':return'success';case'deadline':return'error';case'event':return'warning';default:return'default';}};const getEventIcon=type=>{switch(type){case'work':return/*#__PURE__*/_jsx(Work,{});case'training':return/*#__PURE__*/_jsx(School,{});case'meeting':return/*#__PURE__*/_jsx(Event,{});case'deadline':return/*#__PURE__*/_jsx(Warning,{});case'event':return/*#__PURE__*/_jsx(Star,{});default:return/*#__PURE__*/_jsx(Event,{});}};const handleSubmit=async()=>{try{if(editingEvent){if(editingEvent.isSchedule){await axios.put(\"/api/schedules/\".concat(editingEvent.id),eventForm);}else{await axios.put(\"/api/calendar/events/\".concat(editingEvent.id),eventForm);}}else{await axios.post('/api/calendar/events',eventForm);}fetchEvents();setDialogOpen(false);setEventForm({title:'',description:'',date:'',type:'work'});setEditingEvent(null);}catch(error){console.error('Error saving event:',error);}};const handleDelete=async()=>{try{if(editingEvent){if(editingEvent.isSchedule){await axios.delete(\"/api/schedules/\".concat(editingEvent.id));}else{await axios.delete(\"/api/calendar/events/\".concat(editingEvent.id));}fetchEvents();setDialogOpen(false);setEditingEvent(null);}}catch(error){console.error('Error deleting event:',error);}};const renderCalendar=()=>{const{daysInMonth,startingDay}=getDaysInMonth(currentDate);const days=[];// Add empty cells for days before the first day of the month\nfor(let i=0;i<startingDay;i++){days.push(/*#__PURE__*/_jsx(Box,{sx:{p:2,border:'1px solid #e0e0e0',backgroundColor:'#fafafa',display:'flex',flexDirection:'column',height:'100%'}},\"empty-\".concat(i)));}// Add cells for each day of the month\nfor(let day=1;day<=daysInMonth;day++){const date=new Date(currentDate.getFullYear(),currentDate.getMonth(),day);const dayEvents=getEventsForDate(date);const isToday=date.toDateString()===new Date().toDateString();days.push(/*#__PURE__*/_jsxs(Box,{sx:{p:2,border:'1px solid #e0e0e0',backgroundColor:isToday?'primary.light':'background.paper',cursor:isAdmin?'pointer':'default','&:hover':isAdmin?{backgroundColor:'action.hover'}:{},display:'flex',flexDirection:'column',height:'100%'},onClick:()=>handleDateClick(date),children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontWeight:isToday?'bold':'normal',color:isToday?'white':'text.primary',mb:1},children:day}),dayEvents.map((event,index)=>/*#__PURE__*/_jsx(Chip,{label:event.title,size:\"medium\",color:getEventColor(event.type),icon:getEventIcon(event.type),sx:{mb:1,fontSize:'0.8rem',maxWidth:'100%',cursor:isAdmin?'pointer':'default',height:'auto','& .MuiChip-label':{whiteSpace:'normal',lineHeight:1.2}},onClick:e=>handleEventClick(event,e)},\"\".concat(event.id,\"-\").concat(index)))]},day));}return/*#__PURE__*/_jsx(Grid,{container:true,spacing:0,sx:{border:'1px solid #e0e0e0',borderRadius:'0 0 4px 4px',overflow:'hidden',display:'grid',gridTemplateColumns:'repeat(7, 1fr)',gridTemplateRows:'repeat(6, 1fr)',minHeight:'600px'},children:days});};return/*#__PURE__*/_jsxs(Box,{children:[isAdmin&&/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Interactive Calendar Instructions\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",sx:{mb:1},children:\"\\u2022 Click on any date to add a new event\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",sx:{mb:1},children:\"\\u2022 Click on existing events to edit or delete them\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"\\u2022 Use the floating \\\"+\\\" button to add events for any date\"})]})}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>navigateMonth(-1),color:\"primary\",children:/*#__PURE__*/_jsx(ChevronLeft,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:currentDate.toLocaleDateString('en-US',{month:'long',year:'numeric'})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",startIcon:/*#__PURE__*/_jsx(Today,{}),onClick:goToToday,children:\"Today\"}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>navigateMonth(1),color:\"primary\",children:/*#__PURE__*/_jsx(ChevronRight,{})})]})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'grid',gridTemplateColumns:'repeat(7, 1fr)',border:'1px solid #e0e0e0',borderBottom:'1px solid #e0e0e0',borderRadius:'4px 4px 0 0',overflow:'hidden'},children:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].map(day=>/*#__PURE__*/_jsx(Box,{sx:{p:2,textAlign:'center',backgroundColor:'grey.100',borderRight:'1px solid #e0e0e0','&:last-child':{borderRight:'none'}},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",fontWeight:\"bold\",children:day})},day))}),renderCalendar()]})}),isAdmin&&/*#__PURE__*/_jsx(Tooltip,{title:\"Add Event\",children:/*#__PURE__*/_jsx(Fab,{color:\"primary\",\"aria-label\":\"add event\",sx:{position:'fixed',bottom:16,right:16},onClick:()=>{setSelectedDate(null);setEventForm({title:'',description:'',date:new Date().toISOString().split('T')[0],type:'work'});setEditingEvent(null);setDialogOpen(true);},children:/*#__PURE__*/_jsx(Add,{})})}),/*#__PURE__*/_jsxs(Dialog,{open:dialogOpen,onClose:()=>setDialogOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[editingEvent?'Edit Event':'Add New Event',selectedDate&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:[\"Date: \",selectedDate.toLocaleDateString()]})]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:1},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Event Title\",value:eventForm.title,onChange:e=>setEventForm(_objectSpread(_objectSpread({},eventForm),{},{title:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",multiline:true,rows:3,value:eventForm.description,onChange:e=>setEventForm(_objectSpread(_objectSpread({},eventForm),{},{description:e.target.value})),sx:{mb:2}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Date\",type:\"date\",value:eventForm.date,onChange:e=>setEventForm(_objectSpread(_objectSpread({},eventForm),{},{date:e.target.value})),InputLabelProps:{shrink:true},sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Event Type\"}),/*#__PURE__*/_jsxs(Select,{value:eventForm.type,label:\"Event Type\",onChange:e=>setEventForm(_objectSpread(_objectSpread({},eventForm),{},{type:e.target.value})),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"work\",children:\"Work\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"training\",children:\"Training\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"meeting\",children:\"Meeting\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"deadline\",children:\"Deadline\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"event\",children:\"Event\"})]})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setDialogOpen(false),children:\"Cancel\"}),editingEvent&&/*#__PURE__*/_jsx(Button,{onClick:handleDelete,color:\"error\",variant:\"outlined\",children:\"Delete\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleSubmit,variant:\"contained\",children:[editingEvent?'Update':'Add',\" Event\"]})]})]})]});};export default CalendarView;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","Grid","IconButton","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","Fab","Tooltip","ChevronLeft","ChevronRight","Today","Add","Edit","Delete","Work","School","Event","Warning","Star","useAuth","axios","jsx","_jsx","jsxs","_jsxs","CalendarView","user","currentDate","setCurrentDate","Date","events","setEvents","dialogOpen","setDialogOpen","editingEvent","setEditingEvent","selectedDate","setSelectedDate","eventForm","setEventForm","title","description","date","type","isAdmin","role","fetchEvents","schedulesResponse","eventsResponse","Promise","all","get","schedules","data","map","schedule","_objectSpread","isSchedule","displayDate","weekOf","customEvents","event","error","console","getDaysInMonth","year","getFullYear","month","getMonth","firstDay","lastDay","daysInMonth","getDate","startingDay","getDay","navigateMonth","direction","newDate","setMonth","goToToday","getEventsForDate","filter","eventDate","toDateString","handleDateClick","toISOString","split","handleEventClick","e","stopPropagation","getEventColor","getEventIcon","handleSubmit","put","concat","id","post","handleDelete","delete","renderCalendar","days","i","push","sx","p","border","backgroundColor","display","flexDirection","height","day","dayEvents","isToday","cursor","onClick","children","variant","fontWeight","color","mb","index","label","size","icon","fontSize","maxWidth","whiteSpace","lineHeight","container","spacing","borderRadius","overflow","gridTemplateColumns","gridTemplateRows","minHeight","gutterBottom","justifyContent","alignItems","toLocaleDateString","gap","startIcon","borderBottom","textAlign","borderRight","position","bottom","right","open","onClose","fullWidth","mt","pt","value","onChange","target","multiline","rows","InputLabelProps","shrink"],"sources":["/Users/rosavargas/ICD/client/src/components/schedules/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  IconButton,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Fab,\n  Tooltip\n} from '@mui/material';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Today,\n  Add,\n  Edit,\n  Delete,\n  Work,\n  School,\n  Event,\n  Warning,\n  Star\n} from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport axios from 'axios';\n\nconst CalendarView = () => {\n  const { user } = useAuth();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventForm, setEventForm] = useState({\n    title: '',\n    description: '',\n    date: '',\n    type: 'work'\n  });\n\n  const isAdmin = user?.role === 'admin';\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    try {\n      const [schedulesResponse, eventsResponse] = await Promise.all([\n        axios.get('/api/schedules'),\n        axios.get('/api/calendar/events')\n      ]);\n      \n      const schedules = schedulesResponse.data.map(schedule => ({\n        ...schedule,\n        isSchedule: true,\n        displayDate: schedule.weekOf\n      }));\n      \n      const customEvents = eventsResponse.data.map(event => ({\n        ...event,\n        isSchedule: false,\n        displayDate: event.date\n      }));\n      \n      setEvents([...schedules, ...customEvents]);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDay = firstDay.getDay();\n    \n    return { daysInMonth, startingDay };\n  };\n\n  const navigateMonth = (direction) => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + direction);\n    setCurrentDate(newDate);\n  };\n\n  const goToToday = () => {\n    setCurrentDate(new Date());\n  };\n\n  const getEventsForDate = (date) => {\n    return events.filter(event => {\n      const eventDate = new Date(event.displayDate);\n      return eventDate.toDateString() === date.toDateString();\n    });\n  };\n\n  const handleDateClick = (date) => {\n    if (isAdmin) {\n      setSelectedDate(date);\n      setEventForm({\n        title: '',\n        description: '',\n        date: date.toISOString().split('T')[0],\n        type: 'work'\n      });\n      setEditingEvent(null);\n      setDialogOpen(true);\n    }\n  };\n\n  const handleEventClick = (event, e) => {\n    e.stopPropagation();\n    if (isAdmin) {\n      setEditingEvent(event);\n      setEventForm({\n        title: event.title,\n        description: event.description || '',\n        date: event.displayDate.split('T')[0],\n        type: event.type || 'work'\n      });\n      setDialogOpen(true);\n    }\n  };\n\n  const getEventColor = (type) => {\n    switch (type) {\n      case 'work': return 'primary';\n      case 'training': return 'secondary';\n      case 'meeting': return 'success';\n      case 'deadline': return 'error';\n      case 'event': return 'warning';\n      default: return 'default';\n    }\n  };\n\n  const getEventIcon = (type) => {\n    switch (type) {\n      case 'work': return <Work />;\n      case 'training': return <School />;\n      case 'meeting': return <Event />;\n      case 'deadline': return <Warning />;\n      case 'event': return <Star />;\n      default: return <Event />;\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (editingEvent) {\n        if (editingEvent.isSchedule) {\n          await axios.put(`/api/schedules/${editingEvent.id}`, eventForm);\n        } else {\n          await axios.put(`/api/calendar/events/${editingEvent.id}`, eventForm);\n        }\n      } else {\n        await axios.post('/api/calendar/events', eventForm);\n      }\n      \n      fetchEvents();\n      setDialogOpen(false);\n      setEventForm({ title: '', description: '', date: '', type: 'work' });\n      setEditingEvent(null);\n    } catch (error) {\n      console.error('Error saving event:', error);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      if (editingEvent) {\n        if (editingEvent.isSchedule) {\n          await axios.delete(`/api/schedules/${editingEvent.id}`);\n        } else {\n          await axios.delete(`/api/calendar/events/${editingEvent.id}`);\n        }\n        fetchEvents();\n        setDialogOpen(false);\n        setEditingEvent(null);\n      }\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  const renderCalendar = () => {\n    const { daysInMonth, startingDay } = getDaysInMonth(currentDate);\n    const days = [];\n    \n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < startingDay; i++) {\n      days.push(\n        <Box key={`empty-${i}`} sx={{ \n          p: 2, \n          border: '1px solid #e0e0e0',\n          backgroundColor: '#fafafa',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }} />\n      );\n    }\n    \n    // Add cells for each day of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n      const dayEvents = getEventsForDate(date);\n      const isToday = date.toDateString() === new Date().toDateString();\n      \n      days.push(\n        <Box\n          key={day}\n          sx={{\n            p: 2,\n            border: '1px solid #e0e0e0',\n            backgroundColor: isToday ? 'primary.light' : 'background.paper',\n            cursor: isAdmin ? 'pointer' : 'default',\n            '&:hover': isAdmin ? {\n              backgroundColor: 'action.hover'\n            } : {},\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n          }}\n          onClick={() => handleDateClick(date)}\n        >\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontWeight: isToday ? 'bold' : 'normal',\n              color: isToday ? 'white' : 'text.primary',\n              mb: 1\n            }}\n          >\n            {day}\n          </Typography>\n                      {dayEvents.map((event, index) => (\n              <Chip\n                key={`${event.id}-${index}`}\n                label={event.title}\n                size=\"medium\"\n                color={getEventColor(event.type)}\n                icon={getEventIcon(event.type)}\n                sx={{\n                  mb: 1,\n                  fontSize: '0.8rem',\n                  maxWidth: '100%',\n                  cursor: isAdmin ? 'pointer' : 'default',\n                  height: 'auto',\n                  '& .MuiChip-label': {\n                    whiteSpace: 'normal',\n                    lineHeight: 1.2\n                  }\n                }}\n                onClick={(e) => handleEventClick(event, e)}\n              />\n                        ))}\n          </Box>\n        );\n      }\n    \n    return (\n      <Grid container spacing={0} sx={{ \n        border: '1px solid #e0e0e0',\n        borderRadius: '0 0 4px 4px',\n        overflow: 'hidden',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gridTemplateRows: 'repeat(6, 1fr)',\n        minHeight: '600px'\n      }}>\n        {days}\n      </Grid>\n    );\n  };\n\n  return (\n    <Box>\n      {/* Instructions for Admin */}\n      {isAdmin && (\n        <Card sx={{ mb: 3 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Interactive Calendar Instructions\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 1 }}>\n              • Click on any date to add a new event\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 1 }}>\n              • Click on existing events to edit or delete them\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              • Use the floating \"+\" button to add events for any date\n            </Typography>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Calendar Header */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <IconButton \n              onClick={() => navigateMonth(-1)}\n              color=\"primary\"\n            >\n              <ChevronLeft />\n            </IconButton>\n            \n            <Typography variant=\"h6\">\n              {currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n            </Typography>\n            \n            <Box sx={{ display: 'flex', gap: 1 }}>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                startIcon={<Today />}\n                onClick={goToToday}\n              >\n                Today\n              </Button>\n              <IconButton \n                onClick={() => navigateMonth(1)}\n                color=\"primary\"\n              >\n                <ChevronRight />\n            </IconButton>\n            </Box>\n          </Box>\n\n          {/* Day Headers */}\n          <Box sx={{ \n            display: 'grid',\n            gridTemplateColumns: 'repeat(7, 1fr)',\n            border: '1px solid #e0e0e0',\n            borderBottom: '1px solid #e0e0e0',\n            borderRadius: '4px 4px 0 0',\n            overflow: 'hidden'\n          }}>\n            {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\n              <Box key={day} sx={{ \n                p: 2, \n                textAlign: 'center', \n                backgroundColor: 'grey.100',\n                borderRight: '1px solid #e0e0e0',\n                '&:last-child': {\n                  borderRight: 'none'\n                }\n              }}>\n                <Typography variant=\"h6\" fontWeight=\"bold\">\n                  {day}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n\n          {/* Calendar Grid */}\n          {renderCalendar()}\n        </CardContent>\n      </Card>\n\n      {/* Add Event FAB for Admin */}\n      {isAdmin && (\n        <Tooltip title=\"Add Event\">\n          <Fab\n            color=\"primary\"\n            aria-label=\"add event\"\n            sx={{ position: 'fixed', bottom: 16, right: 16 }}\n            onClick={() => {\n              setSelectedDate(null);\n              setEventForm({\n                title: '',\n                description: '',\n                date: new Date().toISOString().split('T')[0],\n                type: 'work'\n              });\n              setEditingEvent(null);\n              setDialogOpen(true);\n            }}\n          >\n            <Add />\n          </Fab>\n        </Tooltip>\n      )}\n\n      {/* Add/Edit Event Dialog */}\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          {editingEvent ? 'Edit Event' : 'Add New Event'}\n          {selectedDate && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              Date: {selectedDate.toLocaleDateString()}\n            </Typography>\n          )}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 1 }}>\n            <TextField\n              fullWidth\n              label=\"Event Title\"\n              value={eventForm.title}\n              onChange={(e) => setEventForm({ ...eventForm, title: e.target.value })}\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              fullWidth\n              label=\"Description\"\n              multiline\n              rows={3}\n              value={eventForm.description}\n              onChange={(e) => setEventForm({ ...eventForm, description: e.target.value })}\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              fullWidth\n              label=\"Date\"\n              type=\"date\"\n              value={eventForm.date}\n              onChange={(e) => setEventForm({ ...eventForm, date: e.target.value })}\n              InputLabelProps={{ shrink: true }}\n              sx={{ mb: 2 }}\n            />\n            <FormControl fullWidth sx={{ mb: 2 }}>\n              <InputLabel>Event Type</InputLabel>\n              <Select\n                value={eventForm.type}\n                label=\"Event Type\"\n                onChange={(e) => setEventForm({ ...eventForm, type: e.target.value })}\n              >\n                <MenuItem value=\"work\">Work</MenuItem>\n                <MenuItem value=\"training\">Training</MenuItem>\n                <MenuItem value=\"meeting\">Meeting</MenuItem>\n                <MenuItem value=\"deadline\">Deadline</MenuItem>\n                <MenuItem value=\"event\">Event</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\n          {editingEvent && (\n            <Button onClick={handleDelete} color=\"error\" variant=\"outlined\">\n              Delete\n            </Button>\n          )}\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editingEvent ? 'Update' : 'Add'} Event\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CalendarView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}